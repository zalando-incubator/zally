configurations {
    ktlint
}

//TODO review dependencies

def versions = [
        jacoco : '0.7.8',
        jackson: '2.8.8',
]

buildscript {

    ext.kotlin_version = '1.1.3'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath('com.github.ben-manes:gradle-versions-plugin:0.14.0')
        classpath('de.undercouch:gradle-download-task:3.2.0')
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-allopen'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'de.undercouch.download'

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

jar {
    baseName = 'zally-github-integration'
    version = '1.0.0'
}

repositories {
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.kohsuke:github-api:1.86")
    compile("io.swagger:swagger-parser:1.0.28")
    compile("com.github.java-json-tools:json-schema-validator:2.2.8")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.flywaydb:flyway-core:4.1.2')
    compile('org.hsqldb:hsqldb:2.3.3')
    compile('org.postgresql:postgresql:42.1.1')
    compile('org.hibernate:hibernate-core:5.2.9.Final')
    compile('org.jadira.usertype:usertype.core:6.0.1.GA')
    compile("com.fasterxml.jackson.module:jackson-module-parameter-names:${versions.jackson}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}")
    compile("org.zalando.stups:stups-spring-oauth2-server:1.0.18")
    compile("org.zalando:problem-spring-web:0.19.0")
    compile("org.zalando:twintip-spring-web:1.1.0")
    compile("org.zalando.zmon:zmon-actuator:0.9.7")
    compile("io.dropwizard.metrics:metrics-core:3.2.2")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${versions.jackson}")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jackson}") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
    }
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    compile("com.typesafe:config:1.3.1")

    testCompile("net.jadler:jadler-core:1.3.0")
    testCompile("net.jadler:jadler-jdk:1.3.0")
    testCompile("net.jadler:jadler-junit:1.3.0")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.assertj:assertj-core:3.7.0")
    testCompile('com.jayway.jsonpath:json-path-assert:2.2.0')

    ktlint("com.github.shyiko:ktlint:0.8.3")
}

jacoco {
    toolVersion = versions.jacoco
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn jacocoTestReport
check.dependsOn ktlint

bootRun {
    jvmArgs = ["-Dspring.profiles.active=dev"]
}

task downloadSwaggerSchema {
    doFirst {
        download {
            src 'http://swagger.io/v2/schema.json'
            dest "$rootDir/src/main/resources/schemas/swagger-schema.json"
        }
        download {
            src 'http://json-schema.org/draft-04/schema'
            dest "$rootDir/src/main/resources/schemas/json-schema.json"
        }
    }
}
